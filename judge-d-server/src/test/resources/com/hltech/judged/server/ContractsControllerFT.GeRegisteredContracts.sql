INSERT INTO "public".capabilities (service_name, service_version, protocol, value, mime_type) VALUES ('test-provider', '''1.0''', 'rest', '{  "swagger": "2.0",  "info": {    "description": "REST API documentation.",    "version": "1.0",    "title": "service"  },  "host": "service.hltech.dev",  "basePath": "/service/v1",  "paths": {    "/details/{reference_number}": {      "get": {        "summary": "Query details",        "operationId": "getDetailsUsingGET",        "consumes": [          "application/json"        ],        "produces": [          "application/json;charset=UTF-8"        ],        "parameters": [          {            "name": "reference_number",            "in": "path",            "required": true,            "type": "string",            "default": "123456789012345678"          }        ],        "responses": {          "200": {            "description": "details retrieved successfully",            "schema": {              "$ref": "#/definitions/details"            }          },          "400": {            "description": "Request for details is invalid",            "schema": {              "$ref": "#/definitions/ErrorResponse"            },            "headers": {              "X-Reasons": {                "type": "string",                "description": "Comma-separated list of error slugs"              }            }          },          "404": {            "description": "Details with provided identifier was not found",            "schema": {              "$ref": "#/definitions/ErrorResponse"            },            "headers": {              "X-Reasons": {                "type": "string",                "description": "Comma-separated list of error slugs"              }            }          },          "500": {            "description": "Internal server error",            "schema": {              "$ref": "#/definitions/ErrorResponse"            }          }        }      }    }  },  "definitions": {    "ErrorResponse": {      "type": "object",      "required": [        "errors"      ],      "properties": {        "errors": {          "type": "array",          "description": "List of errors",          "items": {            "$ref": "#/definitions/error"          }        }      }    },    "error": {      "type": "object",      "required": [        "code"      ],      "properties": {        "code": {          "type": "string",          "example": "invalid_ref_num",          "description": "Error code",          "enum": [            "internal_server_error",            "malformed_request"          ]        },        "message": {          "type": "string",          "example": "Invalid reference number",          "description": "Error message"        }      }    },    "details": {      "type": "object",      "required": [        "amount",        "date",        "name",        "number",        "reference"      ],      "properties": {        "amount": {          "description": "Payment amount to be collected",          "$ref": "#/definitions/amount"        },        "date": {          "type": "string",          "format": "date-time",          "example": "2018-03-15"        },        "name": {          "type": "string",          "example": "Account 1",          "description": "Name of the account"        },        "number": {          "type": "string",          "example": "12345678",          "description": "Number of the account"        },        "reference": {          "type": "string",          "example": "123456789012345678",          "description": "Reference number of details"        }      }    },    "amount": {      "type": "object",      "required": [        "currency",        "value"      ],      "properties": {        "currency": {          "type": "string",          "example": "GBP",          "description": "currency"        },        "value": {          "type": "number",          "example": 1000.12        }      }    }  }}', 'application/json');
INSERT INTO "public".expectations (service_name, service_version, provider, protocol, value, mime_type) VALUES ('test-provider', '''1.0''', 'test-provider', 'rest', '{  "provider": {    "name": "backend-provider"  },  "consumer": {    "name": "frontend"  },  "interactions": [    {      "description": "a request for details",      "request": {        "method": "GET",        "path": "/details/123456789012345678",        "headers": {          "Accept": "application/json"        }      },      "response": {        "status": 200,        "headers": {          "Content-Type": "application/json;charset=utf-8"        },        "body": {          "amount": {            "currency": "GBP",            "value": 1000.12          },          "date": "2018-03-15",          "name": "Account 1",          "number": "12345678",          "reference": "123456789012345678"        }      }    }  ],  "metadata": {    "pact-specification": {      "version": "2.0.0"    },    "pact-jvm": {      "version": "3.5.14"    }  }}', 'application/json');
INSERT INTO "public".service_contracts (name, version) VALUES ('test-provider', '''1.0''');
